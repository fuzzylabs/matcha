[tool.poetry]
name = "matcha-ml"
version = "0.2.4"
description = "Matcha: A open source tool for provisioning MLOps environments to the cloud."
authors = ["FuzzyLabs <info@fuzzylabs.ai>"]
license = "Apache-2.0"
homepage = "http://fuzzylabs.github.io/matcha"
documentation = "http://fuzzylabs.github.io/matcha"
repository = "https://github.com/fuzzylabs/matcha"
readme = "README.md"
keywords = ["production", "mlops", "devops", "machine learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{include = "matcha_ml", from = "src"}]
exclude = [
    "docs",
    "tests.*",
    "*.tests",
    "tests",
    "*.tests.*",
]
include = [
    "src/matcha_ml",
    "src/matcha_ml/infrastructure/**",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/fuzzylabs/matcha/issues"

[tool.poetry.scripts]
matcha = "matcha_ml.cli.cli:app"

[tool.poetry.dependencies]
python = "^3.8"
typer = {extras = ["all"], version = "^0.7.0"}
python-terraform = "^0.10.1"

azure-identity = "^1.12.0"
azure-mgmt-resource = "^23.0.0"
azure-mgmt-subscription = "^3.1.1"
azure-mgmt-authorization = "^3.0.0"
azure-mgmt-confluent = "^1.0.0"
pyyaml = "^5.4.1"
urllib3 = "1.26.6"


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.1.1"
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
mypy = "^1.1.1"

[tool.poetry.group.doc.dependencies]
mkdocs-glightbox = "^0.3.4"
pymdown-extensions = "10.0"
mkdocs-material = "^9.1.12"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
show_error_codes = true
exclude = ["docs", "test"]
strict = true
namespace_packages = true

[tool.ruff]
# use Python 3.8 as the minimum version for autofixing
target-version = "py38"

select = [
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "Q",    # flake8-quotes
    "ISC",  # flake8-implicit-str-concat
    "F",    # pyflakes
    "D",    # pydocstyle
    "E",    # pycodestyle error
    "W",    # pycodestyle warning
    "N",    # pep8-naming
    "I",    # isort
    "PL",   # pylint rules from categories "Convention", "Error", and "Warning"
    "PLE",  # ruff currently implements only a subset of pylint's rules
    "PLW",  # pylint warning
    "PLR",  # pylint refactor
    "UP",   # pyupgrade
    "C",    # Complexity (mccabe+) & comprehensions
]

# Match black. Note that this also checks comment line length, but black does not format comments.
line-length = 88

show-fixes = true

ignore = [
    "E501"  # Line too long
]

ignore-init-module-imports = true

# Allow imports relative to the "src" and "test" directories.
src = ["src", "test"]

[tool.ruff.mccabe]
max-complexity = 18

[tool.ruff.pyupgrade]
keep-runtime-typing = true

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
	\.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
)/
'''

[[tool.mypy.overrides]]
module = [
    "python_terraform.*"
]
ignore_missing_imports = true
